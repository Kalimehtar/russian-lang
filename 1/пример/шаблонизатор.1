#!1

программа() = 
  аргументы = аргументы-командной-строки()
  если длина-массива аргументы < 3 тогда
    ошибка "Вызывать с аргументами: файл шаблона, файл источника, файл результата"
  шаблон массив(файл-шаблона файл-источника файл-результата) = аргументы  
  каталог = получить-каталог файл-шаблона
  с-каталогом(функ) имя = функ $ каталог ++ обрезать имя
  многострочное-значение = список()
  многострочная-переменная = ложь
  переменные = создать-соответствие()
  прочитать-переменные! файл-источника  
  читая-файл-с-проверкой "Не найден файл шаблона" файл-шаблона $ функция (порт)
    записывая-файл файл-результата $ функция (запись)
      цикл (строка $ в-строках порт)
        условия
          директива?(строка) => обработать-директиву
          иначе
            вывести
              заменить-переменные строка
              запись
              
  -- далее вспомогательные функции          
  прочитать-переменные! имя-файла =
    читая-файл-с-проверкой "Не найден файл источника" имя-файла $ функция (порт)
      цикл (строка $ в-строках порт)
        обработать-директиву строка

  обработать-директиву строка =
    условия
      многострочная-переменная
        продолжить-чтение-многострочного-значения! строка
      префикс-строки(строка "включить ") => с-каталогом $ функция (полное-имя)
        прочитать-переменные! полное-имя
      префикс-строки(строка "@") => с-каталогом $ функция (полное-имя)
        файл-шаблона := полное-имя
      иначе
        прочитать-строку-в-переменную строка

  продолжить-чтение-многострочного-значения! строка =
    если строка == "=="
      тогда
      вставить-в-соответствие! переменные
        многострочная-переменная
        объединить-строки развернуть(многострочное-значение) "\n"
      многострочная-переменная := ложь        
      иначе
      многострочное-значение := пара строка многострочное-значение
        
  прочитать-строку-в-переменную строка =
    позиция = найти-в-строке строка "="
    если позиция тогда
      пусть
        ;
          имя $ обрезать $ подстрока строка 0 позиция
          значение $ обрезать $ подстрока строка позиция
        если префикс-строки значение "=" тогда
          многострочная-переменная := имя
          многострочное-значение := список()
          иначе
          вставить-в-соответствие! переменные имя значение

  заменить-переменные строка =
    значения строка-до строка-после имя-переменной = выбрать-имя-переменной строка
    если строка-до тогда
      заменить-переменные $ строка-до ++ переменные[имя-переменной] ++ строка-после
      иначе
      строка
      
  пусто

директива? строка =
  проверяемая-строка = обрезать строка
  длина = длина-строки проверяемая-строка - 2
  если подстрока проверяемая-строка 0 3 == "%[[" && подстрока проверяемая-строка длина == "]]"
    тогда
    подстрока проверяемая-строка 3 длина
    иначе
    ложь

выбрать-имя-переменной строка =
  позиция1 = найти-в-строке строка "[["
  если позиция1 тогда
    пусть (позиция2 $ позиция1 + найти-в-строке подстрока(строка позиция1) "]]")
      если позиция2 тогда
        значения
          подстрока строка 0 позиция1
          подстрока строка $ позиция2 + 2
          подстрока строка (позиция1 + 2) позиция2
        иначе
        значения ложь ложь ложь
    иначе
    значения ложь ложь ложь
    
префикс-строки строка поиск =
  длина = длина-строки поиск
  если длина-строки строка >= длина && подстрока строка 0 длина == поиск
    тогда
    подстрока строка длина
    иначе
    ложь
    
читая-файл-с-проверкой префикс-ошибки файл обработка =
  если есть-файл? файл тогда
    читая-файл файл обработка
    иначе
    ошибка $ префикс-ошибки ++ " " ++ файл

найти-в-строке строка поиск =
  длина-поиска = длина-строки поиск
  цикл/первый
    ;
      сдвиг $ длина-строки строка - длина-поиска + 1
      #:когда $ подстрока строка сдвиг (сдвиг + длина-поиска) == поиск
    сдвиг

получить-каталог имя-файла =
  пусть цикл (позиция $ длина-строки имя-файла - 1)
    условия
      (имя-файла[позиция] == #\/ || имя-файла[позиция] == #\\)
        подстрока имя-файла 0 $ позиция + 1
      (позиция == 0)
        ""
      иначе
        цикл (позиция - 1)