#!1
используется класс
  с-префиксом rkt: racket/gui
предоставлять главное-окно% текстовое-поле% объект область<%> окно<%> главное-окно<%> \
  кнопка% строка-меню% меню% пункт-меню% диалог%

область<%> = интерфейс () родитель главное-окно минимальная-ширина минимальная-высота \
  минимальные-размеры-вывода растягивается-ширина растягивается-высота

окно<%> = интерфейс (область<%>) принимать-файлы окно->экран экран->окно включить сфокусировать \
  размеры указатель курсор высота заголовок ширина внутренние-размеры показать лево верх \
  есть-фокус? включено? показано? при-получении-файла при-изменении-фокуса при-перемещении \
  при-изменении-размера при-получении-элементом-клавиши при-получении-элементом-события \
  при-изменении-фокуса-элемента при-активации-содержащего-окна при-включении-содержащего-окна \
  при-показывании-содержащего-окна обновить переместить-курсор контекстное-меню \
  режим-колеса-мыши

главное-окно<%> = интерфейс (окно<%>) можно-закрыть? можно-выйти? в-центр объект-для-редактирования \
  окно-для-редактирования пространство-событий объект-в-фокусе окно-в-фокусе переместить \
  при-активации при-закрытии при-выходе при-получении-сообщения при-изменении-дисплея \
  при-получении-клавиши установить-размер установить-иконку

определение-синтаксического-правила метод-выбора($внутренний имя)
  функция-выбора
    () $внутренний{имя}
    (новое-значение) $внутренний{имя новое-значение}

определение-синтаксического-правила по-шаблону(тело)
  пусть ()
    определение-синтаксиса (одноразовый форма)
      выбор-синтаксиса форма ()
        (_) тело
    одноразовый()

объект-адины объект =
  объект && поле получатель-событий объект

при-компиляции
  события-окна = '
    on-drop-file путь = получатель-событий{при-получении-файла путь}
    on-focus есть-фокус? = получатель-событий{при-изменении-фокуса есть-фокус?}
    on-move лево верх = получатель-событий{при-перемещении лево верх}
    on-size ширина высота = получатель-событий{при-изменении-размера ширина высота}
    on-subwindow-char элемент событие =
      получатель-событий{при-получении-элементом-клавиши объект-адины(элемент) событие}
    on-subwindow-event элемент событие =
      получатель-событий{при-получении-элементом-события объект-адины(элемент) событие}
    on-subwindow-focus элемент есть-фокус? =
      получатель-событий{при-изменении-фокуса-элемента объект-адины(элемент) есть-фокус?}
    on-superwindow-activate активно? = получатель-событий{при-активации-содержащего-окна активно?}
    on-superwindow-enable включено? = получатель-событий{при-включении-содержащего-окна включено?}
    on-superwindow-show показано? = получатель-событий{при-показывании-содержащего-окна показано?}
  события-главного-окна = '
    can-exit?() = получатель-событий{можно-выйти?}
    on-activate активно? = получатель-событий{при-активации активно?}
    on-exit() = получатель-событий{при-выходе}
    on-message сообщение = получатель-событий{при-получении-сообщения сообщение}
    on-traverse-char событие =
      получатель-событий{при-получении-клавиши событие} || базовый(on-traverse-char событие)
  начало-внутреннего = '
    базовый-объект()
    инициализированные-поля получатель-событий    
  методы-области = '
    родитель() =
      объект-адины $внутренний{parent}
    минимальная-ширина =
      метод-выбора $внутренний min-width
    минимальная-высота =
      метод-выбора $внутренний min-height
    минимальные-размеры-вывода() = $внутренний{get-graphical-min-size}
    растягивается-ширина =
      метод-выбора $внутренний stretchable-width
    растягивается-высота =
      метод-выбора $внутренний stretchable-height
  инициализация-области = '
    $минимальная-ширина(минимальная-ширина) ложь
    $минимальная-высота(минимальная-высота) ложь
    $растягивается-ширина(растягивается-ширина) истина
    $растягивается-высота(растягивается-высота) истина
  внутренняя-инициализация-области = '
    min-width $минимальная-ширина
    min-height $минимальная-высота    
    stretchable-width $растягивается-ширина
    stretchable-height $растягивается-высота  
  методы-окна = '
    заголовок = функция-выбора
      () $внутренний{get-label}
      (новое-значение) $внутренний{set-label новое-значение}
    ширина() = $внутренний{get-width}
    высота() = $внутренний{get-height}
    показать состояние = $внутренний{show состояние}
    включить состояние = $внутренний{enable состояние}
    указатель() = $внутренний{get-handle}
    курсор = функция-выбора
      () $внутренний{get-cursor}
      (новое-значение) $внутренний{set-cursor новое-значение}
    принимать-файлы = метод-выбора($внутренний accept-drop-files)
    окно->экран лево верх = $внутренний{client->screen лево верх}
    экран->окно лево верх = $внутренний{screen->screen лево верх}
    лево() = $внутренний{get-x}
    верх() = $внутренний{get-y}
    обновить() = $внутренний{refresh}
    есть-фокус?() = $внутренний{has-focus?}
    включено?() = $внутренний{is-enabled?}
    показано?() = $внутренний{is-shown?}
    внутренние-размеры() = $внутренний{get-client-size}
    размеры() = $внутренний{get-size}
    сфокусировать() = $внутренний{focus}
    переместить-курсор лево верх = $внутренний{warp-pointer лево верх}
    контекстное-меню меню лево верх = $внутренний{popup-menu лево верх}
    режим-колеса-мыши = функция-выбора
      ()
        выбор $внутренний{wheel-event-mode}
          (one) 'по-одному
          (integer) 'по-целым
          (fraction) 'сразу
      (новое-значение)
        новое-значение* = выбор новое-значение
          (по-одному) 'one
          (по-целым) 'integer
          (сразу) 'fraction
        $внутренний{wheel-event-mode новое-значение*}
    -- события окно<%>
    при-получении-файла путь = пусто
    при-изменении-фокуса есть-фокус? = пусто
    при-перемещении лево верх = пусто
    при-изменении-размера ширина высота = пусто
    при-получении-элементом-клавиши элемент событие = ложь
    при-получении-элементом-события элемент событие = ложь
    при-изменении-фокуса-элемента элемент есть-фокус? = пусто
    при-активации-содержащего-окна активно? = пусто
    при-включении-содержащего-окна включено? = пусто
    при-показывании-содержащего-окна показано? = пусто
  методы-главного-окна = '
    в-центр направление('оба) =
      направление* = выбор направление
        (по-горизонтали) 'horizontal
        (по-вертикали) 'vertical
        (оба) 'both
      $внутренний{center направление*}
    объект-для-редактирования() =
      объект-адины $внутренний{get-edit-target-object}
    окно-для-редактирования() =
      объект-адины $внутренний{get-edit-target-window}
    пространство-событий() = $внутренний{get-eventspace}
    объект-в-фокусе() =
      объект-адины $внутренний{get-focus-object}
    окно-в-фокусе() =
      объект-адины $внутренний{get-focus-window}
    переместить лево верх = $внутренний{move лево верх}
    установить-размер ширина высота = $внутренний{resize ширина высота}
    установить-иконку иконка маска(ложь) какую('обе) =
      какую* = выбор какую
        (маленькую) 'small
        (большую) 'large
        (обе) 'both
      $внутренний{move иконка маска какую*}
    -- события главное-окно<%>
    можно-закрыть?() = истина
    можно-выйти?() = можно-закрыть?()
    при-активации активно? = пусто
    при-закрытии() = пусто
    при-выходе() = пусто
    при-получении-сообщения сообщение = пусто
    при-изменении-дисплея() = пусто
    при-получении-клавиши событие = ложь
  имя-метода элемент =
    имя = первый $ оставшиеся элемент
    список? имя ?
      первый имя
      имя
  имена-методов-окна = отобразить имя-метода
    методы-области ++ методы-окна
  имена-методов-главного-окна = отобразить имя-метода
    методы-области ++ методы-окна ++ методы-главного-окна
    
внутренний-главного-окна% = по-шаблону $ #` класс rkt:frame%
  #,@начало-внутреннего
  переопределить #,@(отобразить имя-метода $ события-окна ++ события-главного-окна)
  дополнить can-close? on-close display-changed
  #,@события-окна
  #,@события-главного-окна
  display-changed() = получатель-событий{при-изменении-дисплея}
  can-close?() = получатель-событий{можно-закрыть?}
  on-close() = получатель-событий{при-закрытии}

главное-окно% = по-шаблону $ #` класс* объект% (главное-окно<%>)
  базовый-объект()
  методы внутренний главное-окно #,@имена-методов-главного-окна создать-строку-состояния \
    показать-состояние
  инициализировать
    $заголовок(заголовок) ""
    $ширина(ширина) ложь
    $высота(высота) ложь
    #,@инициализация-области
    $родитель(родитель) ложь 
  $внутренний = объект внутренний-главного-окна%
    получатель-событий этот
    parent
      $родитель && $родитель{внутренний}
    label $заголовок
    width $ширина
    height $высота
    #,@внутренняя-инициализация-области
  внутренний() = $внутренний
  -- область<%>
  главное-окно() = этот
  #,@методы-области
  -- окно<%>
  #,@методы-окна
  #,@методы-главного-окна
  создать-строку-состояния() = $внутренний{create-status-line}
  показать-состояние состояние = $внутренний{set-status-text}

внутренний-диалога% = по-шаблону $ #` класс rkt:dialog%
  #,@начало-внутреннего
  переопределить #,@(отобразить имя-метода $ события-окна ++ события-главного-окна)
  #,@события-окна
  #,@события-главного-окна

диалог% = по-шаблону $ #` класс* объект% (главное-окно<%>)
  базовый-объект()
  методы внутренний главное-окно #,@имена-методов-главного-окна
  инициализировать
    $заголовок(заголовок) ""
    $ширина(ширина) ложь
    $высота(высота) ложь
    #,@инициализация-области
    $родитель(родитель) ложь 
  $внутренний = объект внутренний-диалога%
    получатель-событий этот
    parent
      $родитель && $родитель{внутренний}
    label $заголовок
    width $ширина
    height $высота
    #,@внутренняя-инициализация-области
  внутренний() = $внутренний
  -- область<%>
  главное-окно() = этот
  #,@методы-области
  -- окно<%>
  #,@методы-окна
  #,@методы-главного-окна
  
внутренний-текстового-поля% = по-шаблону $ #` класс rkt:text-field%
  #,@начало-внутреннего
  переопределить #,@(отобразить имя-метода события-окна)
  #,@события-окна

текстовое-поле% = по-шаблону $ #` класс* объект% ()
  базовый-объект()
  методы внутренний #,@(отобразить имя-метода $ методы-области ++ методы-окна) значение
  инициализировать
    $родитель(родитель)()
    $заголовок(заголовок) ложь
    #,@инициализация-области
    $значение(значение) «»
  $внутренний = объект внутренний-текстового-поля%
    получатель-событий этот
    parent $родитель{внутренний}
    label $заголовок
    init-value $значение
    #,@внутренняя-инициализация-области
  внутренний() = $внутренний
  -- область<%>
  главное-окно() = $родитель{главное-окно}
  #,@методы-области
  -- окно<%>
  #,@методы-окна
  значение() = $внутренний{get-value}

внутренний-кнопки% = по-шаблону $ #` класс rkt:button%
  #,@начало-внутреннего
  переопределить #,@(отобразить имя-метода события-окна)
  #,@события-окна

кнопка% = по-шаблону $ #` класс* объект% ()
  базовый-объект()
  методы внутренний #,@(отобразить имя-метода $ методы-области ++ методы-окна)
  инициализировать
    $родитель(родитель)()
    $заголовок(заголовок) ложь
    действие $ функция (кнопка событие) пусто
    #,@инициализация-области
  $внутренний = объект внутренний-кнопки%
    получатель-событий этот
    parent $родитель{внутренний}
    label $заголовок
    callback действие
    #,@внутренняя-инициализация-области
  внутренний() = $внутренний
  -- область<%>
  главное-окно() = $родитель{главное-окно}
  #,@методы-области
  -- окно<%>
  #,@методы-окна
  

строка-меню% = класс объект%
  базовый-объект()
  методы внутренний
  инициализировать
    $родитель(родитель)()
  $внутренний = объект rkt:menu-bar%
    parent $родитель{внутренний}
  внутренний() = $внутренний

меню% = класс объект%
  базовый-объект()
  методы внутренний
  инициализировать
    $родитель(родитель)()
    $заголовок(заголовок)()
  $внутренний = объект rkt:menu%
    parent $родитель{внутренний}
    label $заголовок
  внутренний() = $внутренний

пункт-меню% = класс объект%
  базовый-объект()
  методы внутренний
  инициализировать
    $родитель(родитель)()
    $заголовок(заголовок)()
    действие
  $внутренний = объект rkt:menu-item%
    parent $родитель{внутренний}
    label $заголовок
    callback действие
  внутренний() = $внутренний
