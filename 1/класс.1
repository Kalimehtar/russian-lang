#!1
используется
  с-префиксом rkt: racket
  1/syn
предоставлять класс* класс интерфейс объект% объект этот

при-компиляции
  заменить-ключ ключ =
    выбор rkt:syntax-e(ключ)
      (базовый-объект) 'rkt:super-new
      (переопределить) 'rkt:override
      (методы) 'rkt:public
      (абстрактные) 'rkt:abstract
      (инициализировать) 'rkt:init
      (инициализированные-поля) 'rkt:init-field
      (поля) 'rkt:field
      (унаследованные-поля) 'rkt:inherit-field
      (унаследованные) 'rkt:inherit
      иначе ключ

  заменить-действие действие =
    ключ = заменить-ключ $ первый действие
    пара ключ $ оставшиеся действие

  русифицировать действия =
    если пустой? действия тогда
      пустой-список
      иначе
      действие = заменить-действие $ из-синтаксиса $ первый действия
      пара действие $ русифицировать $ оставшиеся действия

синоним rkt:this этот

определение-синтаксиса (класс* stx)
  выбор-синтаксиса stx ()
    (_ базовый-класс (интерфейс ...) действие ...)
      #` rkt:class* базовый-класс (интерфейс ...)
        синоним rkt:super базовый
        синоним rkt:inner производный
        синоним rkt:this этот
        #,@(данные->синтаксис #'(действие ...) $ русифицировать $ из-синтаксиса #'(действие ...))

определение-синтаксиса (класс stx)
  выбор-синтаксиса stx ()
    (_ базовый-класс действие ...)
      #` класс* базовый-класс () действие ...

определение-синтаксиса (интерфейс stx)
  выбор-синтаксиса stx ()
    (_ (интерфейс ...) имя ...)
      #` rkt:interface (интерфейс ...) имя ...

синоним rkt:new объект

объект% = класс rkt:object% базовый-объект()
