#lang racket/base
(require 1/lang)
(provide (all-from-out 1/lang) (all-defined-out))
;; имена для формирования документации
;; нельзя просто импортировать базовая.1, так как на сайте тогда не сформируется

(define-syntax-rule (defnames name ...) (begin (define name #f) ...))

(defnames список список? пара пара? длина-строки подстрока логический? добавить-строки корень
  строка? число? ? строка-начинается-с? строка-заканчивается-на? если длина добавить
  элемент-списка развернуть отобразить подсписок подсписок=== отобразить/и отобразить/или функция?
  отобрать свернуть первый оставшиеся : прописные пустой? пустой-список буквально создать-хеш
  функция символ? символ->строка строка->символ точное? точное-целое? неточное? неточное->точное
  точное->неточное синус косинус тангенс арксинус арккосинус арктангенс логарифм экспонента округлить
  вещественное? целое? целое-неотрицательное? рациональное? комплексное? небольшое-число? абс
  замерить-время применить-замеряя-время литера? литера->число число->литера строчные 
  строки-равны? строки-возрастают? строки-не-убывают? строки-убывают? строки-не-возрастают? 
  строки-равны?/без-регистра строки-возрастают?/без-регистра строки-не-убывают?/без-регистра 
  строки-убывают?/без-регистра строки-не-возрастают?/без-регистра строки-равны?/местные 
  строки-возрастают?/местные строки-убывают?/местные строки-равны?/местные/без-регистра 
  строки-возрастают?/местные/без-регистра строки-убывают?/местные/без-регистра элемент-строки 
  установить-элемент-строки! пусто пусто? новая-строка вывести вывести/перенос записать
  записать/перенос открыть-запись-в-строку получить-записанную-строку записать-строку)
